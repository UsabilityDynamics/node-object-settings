{
    "project": {
        "name": "Object Settings",
        "description": "Object settings mixin with EventEmitter and change queue.",
        "version": "0.0.1",
        "url": "https://github.com/usabilitydynamics/object-settings/",
        "logo": "http://a3d72a45d111006ec192-ec5b80a12b0b09b4d52373336afb4254.r80.cf1.rackcdn.com/usability-dynamics.png"
    },
    "files": {
        "lib/settings.js": {
            "name": "lib/settings.js",
            "modules": {},
            "classes": {
                "Settings": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "Settings": {
            "name": "Settings",
            "shortname": "Settings",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "lib/settings.js",
            "line": 1,
            "description": "Object Settings Module\n\nCreate custom objects and methods by aggregating and abstracting esources.",
            "params": [
                {
                    "name": "options",
                    "description": "Configuration options for Settings Options instance.",
                    "type": "Object"
                }
            ],
            "version": "0.0.1",
            "constractor": ""
        }
    },
    "classitems": [
        {
            "file": "lib/settings.js",
            "line": 58,
            "description": "Prototypal Properties",
            "class": "Settings"
        },
        {
            "file": "lib/settings.js",
            "line": 86,
            "description": "Set a key if a key and value are passed. If object is passed, extend it into settings object",
            "return": {
                "description": "",
                "type": "*"
            },
            "chainable": 1,
            "class": "Settings"
        },
        {
            "file": "lib/settings.js",
            "line": 121,
            "description": "Get the value for a particular key",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Settings"
        },
        {
            "file": "lib/settings.js",
            "line": 132,
            "description": "Get the value for a particular key",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Settings"
        },
        {
            "file": "lib/settings.js",
            "line": 141,
            "description": "Get the value for a particular key",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Settings"
        },
        {
            "file": "lib/settings.js",
            "line": 150,
            "description": "Get the value for a particular key",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Settings"
        },
        {
            "file": "lib/settings.js",
            "line": 159,
            "description": "Get the value for a particular key",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Settings"
        },
        {
            "file": "lib/settings.js",
            "line": 169,
            "description": "Constructor Properties",
            "class": "Settings"
        },
        {
            "file": "lib/settings.js",
            "line": 175,
            "description": "Create new Instance",
            "params": [],
            "class": "Settings"
        },
        {
            "file": "lib/settings.js",
            "line": 186,
            "description": "Debugger",
            "class": "Settings"
        },
        {
            "file": "lib/settings.js",
            "line": 195,
            "description": "Extend Target with Source",
            "class": "Settings"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: params with param",
            "line": " lib/settings.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " lib/settings.js:1"
        },
        {
            "message": "unknown tag: constractor",
            "line": " lib/settings.js:1"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/settings.js:86"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " lib/settings.js:175"
        },
        {
            "message": "param name/type/descript missing",
            "line": " lib/settings.js:175"
        },
        {
            "message": "Missing item type\nPrototypal Properties",
            "line": " lib/settings.js:58"
        },
        {
            "message": "Missing item type\nSet a key if a key and value are passed. If object is passed, extend it into settings object",
            "line": " lib/settings.js:86"
        },
        {
            "message": "Missing item type\nGet the value for a particular key",
            "line": " lib/settings.js:121"
        },
        {
            "message": "Missing item type\nGet the value for a particular key",
            "line": " lib/settings.js:132"
        },
        {
            "message": "Missing item type\nGet the value for a particular key",
            "line": " lib/settings.js:141"
        },
        {
            "message": "Missing item type\nGet the value for a particular key",
            "line": " lib/settings.js:150"
        },
        {
            "message": "Missing item type\nGet the value for a particular key",
            "line": " lib/settings.js:159"
        },
        {
            "message": "Missing item type\nConstructor Properties",
            "line": " lib/settings.js:169"
        },
        {
            "message": "Missing item type\nCreate new Instance",
            "line": " lib/settings.js:175"
        },
        {
            "message": "Missing item type\nDebugger",
            "line": " lib/settings.js:186"
        },
        {
            "message": "Missing item type\nExtend Target with Source",
            "line": " lib/settings.js:195"
        }
    ]
}